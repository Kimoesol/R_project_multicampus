for(i in 1:503){
addr1 <- c(addr1, addr_and_phone[[i]][1])
}
addr <- addr1
phone1 <- NULL
for(i in 1:503){
phone1 <- c(phone1, addr_and_phone[[i]][2])
}
phone <- phone1
library(leaflet)
library(dplyr)
library(ggmap)
seoul_lonlat <- geocode("seoul")
install.packages("devtools")
devtools::install_github("cardiomoon/Kormaps")
devtools::install_github("cardiomoon/Kormaps")
library(devtools)
devtools::install_github("cardiomoon/Kormaps")
library(leaflet)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("cardiomoon/Kormaps")
library(Kormaps)
install.packages("leaflet")
library(leaflet)
library(dplyr)
library(ggmap)
devtools::install_github("cardiomoon/Kormaps")
data(cars)
head(cars)
m = lm(dist~speed, data=cars)
m
summary(m)
?lm
fitted(m)[1:4]
residuals(m)[1:4]
predict(m, newdata=data.frame(speed=3))
?fitted
m[1:4]
library(MASS)
data(Boston)
head(Boston)
install.packages("mlbench")
library(mlbench)
data("BostonHousing")
data(BostonHousing)
data("BostonHousing")
data(BostonHousing)
head(BostonHousing)
m2 = lm(medv~, data=BostonHousing)
m2 = lm(medv~. , data=BostonHousing)
m2
summary(m2)
cars$speed
m3 = step(m, direction = "both")
m3 = step(m2, direction = "both")
library(party)
str(airquality)
summary(airquality)
# ctree: 조건부 추론 나무 (conditional tree)
air_ctree = ctree(Temp~solar.r + wind + ozone)
# ctree: 조건부 추론 나무 (conditional tree)
air_ctree = ctree(temp~solar.r + wind + ozone)
# ctree: 조건부 추론 나무 (conditional tree)
air_ctree = ctree(temp~solar.r + wind + ozone, data=airquality)
# ctree: 조건부 추론 나무 (conditional tree)
air_ctree = ctree(Temp~solar.r + wind + ozone, data=airquality)
# ctree: 조건부 추론 나무 (conditional tree)
air_ctree = ctree(Temp~ Solar.R + wind + ozone, data=airquality)
# ctree: 조건부 추론 나무 (conditional tree)
air_ctree = ctree(Temp~ Solar.R + Wind + Ozone, data=airquality)
plot(air_ctree)
air_ctree
install.packages("randomForest")
library(randomForest)
rf = randomForest(Species ~ ., data=iris)
rf
# 변수의 중요도 평가
rf3 = randomForest(Species~., data=iris, importance=TRUE)
importance(rf3)
# 파라미터 튜닝
# ntree를 10,100,200으로 mtry를 3,4로 바꿔가면서 조합한 예
grid = expand.grid(ntree=c(10,100,200),mtry=c(3,4))
grid
setwd("C:/Users/student/R_semi_project")
loan_cnt = read.csv("191219_2016_2018년 서울시 구별 ISBN아동 인기대출도서 대출건수.csv")
View(loan_cnt)
'연앙인구2016' = read.table("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.txt", header=T)
'연앙인구2016' = read.table("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.txt")
'연앙인구2016' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.txt")
a = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.txt")
a = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.txt", sep="/t")
a = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.txt", sep="\t")
a = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
getwd()
a = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
a = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv", sep='\t')
a = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv", skip=2, header=T)
b = read.csv("통합 문서1.csv")
View(b)
'연앙인구2016' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
'연앙인구2017' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2017년.csv")
'연앙인구2018' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2018년.csv")
'세대수(구별)2016' = read.csv("서울시 세대원수별 세대수(구별) 통계_2016년.csv")
'세대수(구별)2017' = read.csv("서울시 세대원수별 세대수(구별) 통계_2017년.csv")
'세대수(구별)2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
library(dplyr)
View(연앙인구2016)
'pop2016' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
'pop2017' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2017년.csv")
'pop2018' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2018년.csv")
'human_num2016' = read.csv("서울시 세대원수별 세대수(구별) 통계_2016년.csv")
'human_num2017' = read.csv("서울시 세대원수별 세대수(구별) 통계_2017년.csv")
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
View(pop2016)
length(pop2016)
nrow(pop2016)
pop2016 %>% group_by(구분)
pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
pop2016 %>% filter(구분.1=="계") %>% group_by(구분) %>% select(-1)
a = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
a %>% select(-1,)
a %>% select(,-1)
View(a)
a = pop2016 %>% filter(구분.1=="계") %>% group_by(구분) %>% a[-1]
a = pop2016 %>% filter(구분.1=="계") %>% group_by(구분) %>% a(01)
a = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
a(-1)
a[-1]
a[-1,]
a = a[-1,]
View(a)
a[,-3]
a = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
a = a[-1,-3]
a
View(a)
pop2016 = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
pop2016 = pop2016[-1,-3]
View(pop2016)
check_data = left_join(loan_cnt, pop2016, by=c("gu","구분"))
names(pop2016)
names(pop2016$구분) = names("gu")
names(pop2016)
names(pop2016[2]) = "gu"
names(pop2016)
rename(pop2016, gu=구분)
check_data = left_join(loan_cnt, pop2016, by=gu)
check_data = left_join(loan_cnt, pop2016, by="gu")
check_data = inner_join(loan_cnt, pop2016, by="gu")
check_data = inner_join(loan_cnt, pop2016, by=c("gu"="gu"))
pop2016 = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
pop2016 = pop2016[-1,-3]
View(pop2016)
check_data = left_join(loan_cnt, pop2016, by=c("gu"="구분"))
View(check_data)
pop2016 = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
View(pop2016)
'pop2016' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
View(pop2016)
pop2016 = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
View(pop2016)
pop2016 = pop2016[-1]
View(pop2016)
'pop2016' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
pop2016 = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
pop2016 = pop2016[-1,-3]
View(pop2016)
check_data = left_join(loan_cnt, pop2016, by=c("gu"="구분"))
View(check_data)
check_data = left_join(loan_cnt, pop2016, by=c("gu"="구분","year"="기간"))
View(check_data)
pop2017 = pop2017 %>% filter(구분.1=="계") %>% group_by(구분)
pop2017 = pop2017[-1,-3]
pop2018 = pop2018 %>% filter(구분.1=="계") %>% group_by(구분)
pop2018 = pop2018[-1,-3]
check_data = left_join(loan_cnt, pop2016, pop2017, pop2018, by=c("gu"="구분","year"="기간"))
check_data = left_join(check_data, pop2017, by=c("gu"="구분","year"="기간"))
check_data = left_join(check_data, pop2018, by=c("gu"="구분","year"="기간"))
View(check_data)
check_data = as.data.frame()
check_data = data.frame()
check_data = left_join(loan_cnt, pop2016, by=c("gu"="구분","year"="기간"))
check_data1 = left_join(loan_cnt, pop2017, by=c("gu"="구분","year"="기간"))
View(check_data1)
check_data2 = left_join(check_data, pop2018, by=c("gu"="구분","year"="기간"))
View(check_data2)
check_data = data.frame()
check_data2 = left_join(loan_cnt, pop2018, by=c("gu"="구분","year"="기간"))
View(check_data2)
loan_cnt %>% filter(year==2016)
year2016 = loan_cnt %>% filter(year==2016)
View(year2016)
check_data = data.frame()
check_data = left_join(year2016, pop2016, by=c("gu"="구분","year"="기간"))
View(check_data)
year2017 = loan_cnt %>% filter(year==2017)
year2018 = loan_cnt %>% filter(year==2018)
loan_cnt = read.csv("191219_2016_2018년 서울시 구별 ISBN아동 인기대출도서 대출건수.csv")
'pop2016' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
'pop2017' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2017년.csv")
'pop2018' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2018년.csv")
'human_num2016' = read.csv("서울시 세대원수별 세대수(구별) 통계_2016년.csv")
'human_num2017' = read.csv("서울시 세대원수별 세대수(구별) 통계_2017년.csv")
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
year2016 = loan_cnt %>% filter(year==2016)
year2017 = loan_cnt %>% filter(year==2017)
year2018 = loan_cnt %>% filter(year==2018)
View(year2016)
View(year2016)
pop2016 = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
pop2016 = pop2016[-1,-3]
pop2017 = pop2017 %>% filter(구분.1=="계") %>% group_by(구분)
pop2017 = pop2017[-1,-3]
pop2018 = pop2018 %>% filter(구분.1=="계") %>% group_by(구분)
pop2018 = pop2018[-1,-3]
View(pop2016)
check_data = data.frame()
check_data = left_join(year2016, pop2016, by=c("gu"="구분","year"="기간"))
View(check_data)
check_data1 = left_join(year2017, pop2017, by=c("gu"="구분","year"="기간"))
View(check_data1)
check_data2 = left_join(loan_cnt, pop2018, by=c("gu"="구분","year"="기간"))
check_data2 = data.frame()
check_data2 = left_join(year2018, pop2018, by=c("gu"="구분","year"="기간"))
View(check_data2)
View(human_num2016)
View(human_num2016)
# 구별 세대원수별 세대부
human_num2016 = human_num2016[-1]
human_num2016
# 구별 세대원수별 세대부
View(human_num2016)
'human_num2016' = read.csv("서울시 세대원수별 세대수(구별) 통계_2016년.csv")
# 구별 세대원수별 세대부
View(human_num2016)
human_num2016 = human_num2016[-1,]
# 구별 세대원수별 세대부
View(human_num2016)
human_num2017 = human_num2017[-1,]
human_num2018 = human_num2018[-1,]
check_data = left_join(check_data, human_num2016, by=c("gu"="자치구", "year"="기간"))
View(check_data)
check_data1 = left_join(check_data, human_num2016, by=c("gu"="자치구", "year"="기간"))
# 최종 데이터 프레임 만들기
check_data1 = data.frame()
check_data1 = left_join(year2017, pop2017, by=c("gu"="구분","year"="기간"))
check_data1 = left_join(check_data, human_num2017, by=c("gu"="자치구", "year"="기간"))
check_data1 = left_join(check_data1, human_num2017, by=c("gu"="자치구", "year"="기간"))
# 최종 데이터 프레임 만들기
check_data1 = data.frame()
check_data1 = left_join(year2017, pop2017, by=c("gu"="구분","year"="기간"))
check_data1 = left_join(check_data1, human_num2017, by=c("gu"="자치구", "year"="기간"))
View(check_data1)
check_data2 = left_join(check_data2, human_num2018, by=c("gu"="자치구", "year"="기간"))
View(check_data2)
# 최종 데이터 프레임 만들기
data_Y = data.frame()
data_Y2016 = left_join(year2016, pop2016, by=c("gu"="구분","year"="기간"))
data_Y2016 = left_join(check_data, human_num2016, by=c("gu"="자치구", "year"="기간"))
data_Y2017 = left_join(year2017, pop2017, by=c("gu"="구분","year"="기간"))
data_Y2017 = left_join(check_data1, human_num2017, by=c("gu"="자치구", "year"="기간"))
data_Y2018 = left_join(year2018, pop2018, by=c("gu"="구분","year"="기간"))
data_Y2018 = left_join(check_data2, human_num2018, by=c("gu"="자치구", "year"="기간"))
View(data_Y2016)
View(data_Y2017)
View(data_Y2018)
# 데이터 전처리 (gsub)
gsub(",","",data_Y2016[-5])
# 데이터 전처리 (gsub)
gsub(",","",data_Y2016[,-5])
# 데이터 전처리 (gsub)
data_Y2016[,-5]
# 데이터 전처리 (gsub)
data_Y2016[,5]
data_Y2016 = left_join(data_Y2016, human_num2016, by=c("gu"="자치구", "year"="기간"))
data_Y2017 = left_join(data_Y2017, human_num2017, by=c("gu"="자치구", "year"="기간"))
data_Y2018 = left_join(data_Y2018, human_num2018, by=c("gu"="자치구", "year"="기간"))
# 데이터 전처리 (gsub)
gsub(",","",data_Y2016[,5])
length(names(data_Y2016))
for (i in 5:length(names(data_Y2016))){
data_Y2016 = gsub(",","",data_Y2016[,i])
}
i
data_Y2016 = left_join(year2016, pop2016, by=c("gu"="구분","year"="기간"))
data_Y2016 = left_join(data_Y2016, human_num2016, by=c("gu"="자치구", "year"="기간"))
View(data_Y2016)
for (i in 5:length(names(data_Y2016))){
data_Y2016 = gsub(",","",data_Y2016[,i])
}
# 최종 데이터 프레임 만들기
data_Y = data.frame()
# 최종 데이터 프레임 만들기
data_Y2016 = data.frame()
data_Y2016 = left_join(year2016, pop2016, by=c("gu"="구분","year"="기간"))
data_Y2016 = left_join(data_Y2016, human_num2016, by=c("gu"="자치구", "year"="기간"))
for (i in 5:length(names(data_Y2016))){
data_Y2016[,i] = gsub(",","",data_Y2016[,i])
}
data_Y2016
View(data_Y2016)
data_Y2017[,i] = gsub(",","",data_Y2017[,i])
data_Y2017 = left_join(year2017, pop2017, by=c("gu"="구분","year"="기간"))
data_Y2017 = left_join(data_Y2017, human_num2017, by=c("gu"="자치구", "year"="기간"))
for (i in 5:length(names(data_Y2017))){
data_Y2017[,i] = gsub(",","",data_Y2017[,i])
}
for (i in 5:length(names(data_Y2018))){
data_Y2018[,i] = gsub(",","",data_Y2018[,i])
}
data_all = cbind(data_Y2016, data_Y2017, data_Y2018)
View(data_all)
data_all = c()
data_all = rbind(data_Y2016, data_Y2017, data_Y2018)
data_all = data.frame()
data_all = rbind(data_Y2016, data_Y2017, data_Y2018)
data_all1 = rbind(data_Y2016, data_Y2017)
data_all1 = rbind(data_all1, data_Y2018)
data_all1
View(data_all)
View(data_all1)
data_all2 = rbind(data_all1, data_Y2018)
names(data_Y2017) == names(data_Y2018)
length(names(data_Y2017)) == length(names(data_Y2018))
data_Y2018 = left_join(year2018, pop2018, by=c("gu"="구분","year"="기간"))
data_Y2018 = left_join(data_Y2018, human_num2018, by=c("gu"="자치구", "year"="기간"))
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
year2018 = loan_cnt %>% filter(year==2018)
pop2018 = pop2018 %>% filter(구분.1=="계") %>% group_by(구분)
pop2018 = pop2018[-1,-3]
pop2018
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
'pop2018' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2018년.csv")
pop2018
pop2018 = pop2018 %>% filter(구분.1=="계") %>% group_by(구분)
pop2018 = pop2018[-1,-3]
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
human_num2018 = human_num2018[-1,]
data_Y2018 = left_join(year2018, pop2018, by=c("gu"="구분","year"="기간"))
data_Y2018 = left_join(data_Y2018, human_num2018, by=c("gu"="자치구", "year"="기간"))
'pop2018' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2018년.csv")
pop2018 = pop2018 %>% filter(구분.1=="계") %>% group_by(구분)
pop2018 = pop2018[-1,-3]
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
setwd("C:/Users/student/R_semi_project")
loan_cnt = read.csv("191219_2016_2018년 서울시 구별 ISBN아동 인기대출도서 대출건수.csv")
View(loan_cnt)
'pop2016' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
'pop2017' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2017년.csv")
'pop2018' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2018년.csv")
'human_num2016' = read.csv("서울시 세대원수별 세대수(구별) 통계_2016년.csv")
'human_num2017' = read.csv("서울시 세대원수별 세대수(구별) 통계_2017년.csv")
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
library(dplyr)
# 연도
year2016 = loan_cnt %>% filter(year==2016)
year2017 = loan_cnt %>% filter(year==2017)
year2018 = loan_cnt %>% filter(year==2018)
View(year2016)
# 구별, 연령별 주민등록연앙인구
pop2016 = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
pop2016 = pop2016[-1,-3]
pop2017 = pop2017 %>% filter(구분.1=="계") %>% group_by(구분)
pop2017 = pop2017[-1,-3]
pop2018 = pop2018 %>% filter(구분.1=="계") %>% group_by(구분)
pop2018 = pop2018[-1,-3]
View(pop2016)
# 구별 세대원수별 세대수
human_num2016 = human_num2016[-1,]
human_num2017 = human_num2017[-1,]
human_num2018 = human_num2018[-1,]
# 최종 데이터 프레임 만들기
data_Y2016 = data.frame()
data_Y2016 = left_join(year2016, pop2016, by=c("gu"="구분","year"="기간"))
data_Y2016 = left_join(data_Y2016, human_num2016, by=c("gu"="자치구", "year"="기간"))
data_Y2017 = left_join(year2017, pop2017, by=c("gu"="구분","year"="기간"))
data_Y2017 = left_join(data_Y2017, human_num2017, by=c("gu"="자치구", "year"="기간"))
data_Y2018 = left_join(year2018, pop2018, by=c("gu"="구분","year"="기간"))
data_Y2018 = left_join(data_Y2018, human_num2018, by=c("gu"="자치구", "year"="기간"))
View(data_Y2016)
View(data_Y2017)
View(data_Y2018)
# 데이터 전처리 (gsub)
for (i in 5:length(names(data_Y2016))){
data_Y2016[,i] = gsub(",","",data_Y2016[,i])
}
for (i in 5:length(names(data_Y2017))){
data_Y2017[,i] = gsub(",","",data_Y2017[,i])
}
for (i in 5:length(names(data_Y2018))){
data_Y2018[,i] = gsub(",","",data_Y2018[,i])
}
length(names(data_Y2017)) == length(names(data_Y2018))
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
human_num2018 = human_num2018[-1,]
data_Y2018 = left_join(year2018, pop2018, by=c("gu"="구분","year"="기간"))
data_Y2018 = left_join(data_Y2018, human_num2018, by=c("gu"="자치구", "year"="기간"))
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
data_Y2018 = left_join(year2018, pop2018, by=c("gu"="구분","year"="기간"))
setwd("C:/Users/student/R_semi_project")
loan_cnt = read.csv("191219_2016_2018년 서울시 구별 ISBN아동 인기대출도서 대출건수.csv")
View(loan_cnt)
'pop2016' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2016년.csv")
'pop2017' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2017년.csv")
'pop2018' = read.csv("서울시 주민등록연앙인구 (연령별, 구별) 통계_2018년.csv")
'human_num2016' = read.csv("서울시 세대원수별 세대수(구별) 통계_2016년.csv")
'human_num2017' = read.csv("서울시 세대원수별 세대수(구별) 통계_2017년.csv")
'human_num2018' = read.csv("서울시 세대원수별 세대수(구별) 통계_2018년.csv")
library(dplyr)
# 연도
year2016 = loan_cnt %>% filter(year==2016)
year2017 = loan_cnt %>% filter(year==2017)
year2018 = loan_cnt %>% filter(year==2018)
View(year2016)
# 구별, 연령별 주민등록연앙인구
pop2016 = pop2016 %>% filter(구분.1=="계") %>% group_by(구분)
pop2016 = pop2016[-1,-3]
pop2017 = pop2017 %>% filter(구분.1=="계") %>% group_by(구분)
pop2017 = pop2017[-1,-3]
pop2018 = pop2018 %>% filter(구분.1=="계") %>% group_by(구분)
pop2018 = pop2018[-1,-3]
View(pop2016)
# 구별 세대원수별 세대수
human_num2016 = human_num2016[-1,]
human_num2017 = human_num2017[-1,]
human_num2018 = human_num2018[-1,]
# 최종 데이터 프레임 만들기
data_Y2016 = data.frame()
data_Y2016 = left_join(year2016, pop2016, by=c("gu"="구분","year"="기간"))
data_Y2016 = left_join(data_Y2016, human_num2016, by=c("gu"="자치구", "year"="기간"))
data_Y2017 = left_join(year2017, pop2017, by=c("gu"="구분","year"="기간"))
data_Y2017 = left_join(data_Y2017, human_num2017, by=c("gu"="자치구", "year"="기간"))
data_Y2018 = left_join(year2018, pop2018, by=c("gu"="구분","year"="기간"))
data_Y2018 = left_join(data_Y2018, human_num2018, by=c("gu"="자치구", "year"="기간"))
View(data_Y2016)
View(data_Y2017)
View(data_Y2018)
# 데이터 전처리 (gsub)
for (i in 5:length(names(data_Y2016))){
data_Y2016[,i] = gsub(",","",data_Y2016[,i])
}
for (i in 5:length(names(data_Y2017))){
data_Y2017[,i] = gsub(",","",data_Y2017[,i])
}
for (i in 5:length(names(data_Y2018))){
data_Y2018[,i] = gsub(",","",data_Y2018[,i])
}
length(names(data_Y2017)) == length(names(data_Y2018))
data_all = rbind(data_Y2016, data_Y2017, data_Y2018)
View(data_all)
test1 = read.csv("191219_2016_2018년 서울시 구별 ISBN아동 인기대출도서 대출건수 (인구통계 추가) (1).csv")
View(test1)
View(test1) %>% select(기간, 자치구, X0.4세, X5.9세, X10.14세)
test1 %>% select(기간, 자치구, X0.4세, X5.9세, X10.14세)
test1 %>% select(기간, 자치구,loan_count, X0.4세, X5.9세, X10.14세)
test1 = test1 %>% select(기간, 자치구,loan_count, X0.4세, X5.9세, X10.14세)
test1 = test1 %>% mutate(나이=sum(X0.4세,X5.9세,X10.14세))
test1
test1 = test1 %>% mutate(나이=rowSums(X0.4세,X5.9세,X10.14세))
class(test1$X0.4세[1])
barplot(X0.4세, loan_count)
barplot(test1$X0.4세, loan_count)
barplot(test1$X0.4세, test1$loan_count)
test1 %>% group_by(자치구)
test1 %>% group_by(자치구) %>% View(loan_count)
test1 %>% group_by(자치구) %>% View(test1$loan_count)
test1 %>% arrange(desc(자치구))
test1 = read.csv("191219_2016_2018년 서울시 구별 ISBN아동 인기대출도서 대출건수 (인구통계 추가) (1).csv")
test1 = test1 %>% select(기간, 자치구,loan_count, X0.4세, X5.9세, X10.14세)
test1 = test1 %>% arrange(desc(자치구))
View(test1)
test1 = test1 %>% mutate(나이=sum(test1$X0.4세,test1$X5.9세,test1$X10.14세))
test1 = read.csv("191219_2016_2018년 서울시 구별 ISBN아동 인기대출도서 대출건수 (인구통계 추가) (1).csv")
test1 = test1 %>% select(기간, 자치구,loan_count, X0.4세, X5.9세, X10.14세)
test1 = test1 %>% arrange(desc(자치구))
test1[1]
test1[1,]
for (i in 1:length(nrow(test1))) {
test1 %>% mutate(test1[i,]$X0.4세+test1[i,]$X5.9세+test1[i,]$X10.14세)
}
View(test1)
View(test1)
for (i in 1:length(nrow(test1))) {
test1 %>% mutate(나이 = test1[i,]$X0.4세+test1[i,]$X5.9세+test1[i,]$X10.14세)
}
View(test1)
b = c()
for (i in 1:length(nrow(test1))) {
a = sum(test1[i,]$X0.4세,test1[i,]$X5.9세,test1[i,]$X10.14세)
b = c(c,a)
}
b
a
b = c()
for (i in 1:length(nrow(test1))) {
a = sum(test1[i,]$X0.4세,test1[i,]$X5.9세,test1[i,]$X10.14세)
b = append(a)
}
b = c()
for (i in 1:length(nrow(test1))) {
a = sum(test1[i,]$X0.4세,test1[i,]$X5.9세,test1[i,]$X10.14세)
b = append(b,a)
}
b
barplot(test1$X0.4세+test1$X5.9세, test1$loan_count)
barplot(test1$X0.4세, test1$loan_count)
barplot(test1$X0.4세+test1$X5.9세+test1$X10.14세, test1$loan_count)
barplot(test1$X0.4세+test1$X5.9세+test1$X10.14세, test1$loan_count, names.arg=c(1:22))
barplot(test1$X0.4세+test1$X5.9세+test1$X10.14세, test1$loan_count, names.arg=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25))
barplot(test1$X0.4세+test1$X5.9세+test1$X10.14세, test1$loan_count, legend=names('자치구'))
barplot(test1$X0.4세+test1$X5.9세+test1$X10.14세, test1$loan_count, names.arg=names('자치구'))
