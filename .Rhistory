}
phone1
phone <- phone1
addr_and_phone
remDr$open()
remDr$navigate('https://www.istarbucks.co.kr/store/store_map.do?disp=locale')
# 서울지역
Seoul_Click = remDr$findElement(using = 'css', '#container > div > form > fieldset > div > section > article.find_store_cont > article > article:nth-child(4) > div.loca_step1 > div.loca_step1_cont > ul > li:nth-child(1) > a')
Seoul_Click$clickElement()
# 전체클릭
Whole_Click = remDr$findElement(using = 'css', '#mCSB_2_container > ul > li:nth-child(1) > a')
Whole_Click$clickElement()
Seoul_Click = remDr$findElement(using = 'css', '#container > div > form > fieldset > div > section > article.find_store_cont > article > article:nth-child(4) > div.loca_step1 > div.loca_step1_cont > ul > li:nth-child(1) > a')
Seoul_Click$clickElement()
Whole_Click = remDr$findElement(using = 'css', '#mCSB_2_container > ul > li:nth-child(1) > a')
Whole_Click$clickElement()
phone1
table(phone1)
sum(grepl('02-3015-1100', phone1))
sum(grepl('02) 3015-1100', phone1))
remDr$open()
remDr$navigate('https://www.istarbucks.co.kr/store/store_map.do?disp=locale')
Seoul_Click = remDr$findElement(using = 'css', '#container > div > form > fieldset > div > section > article.find_store_cont > article > article:nth-child(4) > div.loca_step1 > div.loca_step1_cont > ul > li:nth-child(1) > a')
Seoul_Click$clickElement()
Whole_Click = remDr$findElement(using = 'css', '#mCSB_2_container > ul > li:nth-child(1) > a')
Whole_Click$clickElement()
count = remDr$findElements('css selector','#container > div > form > fieldset > div > section > article.find_store_cont > article > article:nth-child(4) > div.loca_step3 > div.result_num_wrap > span')
x = sapply(count, function(x){x$getElementText()})
x = as.numeric(x)
x
shop = NULL
addr = NULL
phone = NULL
y1 = NULL
y2 = NULL
y3 = NULL
for(i in 1:x){
# 매장명
shopname = remDr$findElements('css selector',paste('#mCSB_3_container > ul > li:nth-child(',i,') > strong'))
y1 = sapply(shopname, function(x){x$getElementText()})
shop = c(shop,y1)
# 주소
addrname = remDr$findElements('css selector',paste('#mCSB_3_container > ul > li:nth-child(',i,')> p'))
y2 = sapply(addrname, function(x){x$getElementText()})
addr = c(addr,y2)
# 전화번호
telephone = remDr$findElements('css selector',paste('#mCSB_3_container > ul > li:nth-child(',i,') > p > br'))
y3 = sapply(telephone, function(x){x$getElementText()})
phone = c(phone,y3)
if(i%%3==0){
remDr$executeScript(
"var su=arguments[0]; var dom=document.querySelectorAll(
'#mCSB_3_container > ul > li')[su]; dom.scrollIntoView();",list(i))
}
}
addr_and_phone <- strsplit(unlist(addr), '\n')
ddr1 <- NULL
for(i in 1:503){
addr1 <- c(addr1, addr_and_phone[[i]][1])
}
addr <- addr1
phone1 <- NULL
for(i in 1:503){
phone1 <- c(phone1, addr_and_phone[[i]][2])
}
phone <- phone1
library(leaflet)
library(dplyr)
library(ggmap)
seoul_lonlat <- geocode("seoul")
install.packages("devtools")
devtools::install_github("cardiomoon/Kormaps")
devtools::install_github("cardiomoon/Kormaps")
library(devtools)
devtools::install_github("cardiomoon/Kormaps")
library(leaflet)
install.packages("devtools")
install.packages("devtools")
devtools::install_github("cardiomoon/Kormaps")
library(Kormaps)
install.packages("leaflet")
library(leaflet)
library(dplyr)
library(ggmap)
devtools::install_github("cardiomoon/Kormaps")
data(cars)
head(cars)
m = lm(dist~speed, data=cars)
m
summary(m)
?lm
fitted(m)[1:4]
residuals(m)[1:4]
predict(m, newdata=data.frame(speed=3))
?fitted
m[1:4]
library(MASS)
data(Boston)
head(Boston)
install.packages("mlbench")
library(mlbench)
data("BostonHousing")
data(BostonHousing)
data("BostonHousing")
data(BostonHousing)
head(BostonHousing)
m2 = lm(medv~, data=BostonHousing)
m2 = lm(medv~. , data=BostonHousing)
m2
summary(m2)
cars$speed
m3 = step(m, direction = "both")
m3 = step(m2, direction = "both")
setwd("C:/Rstudy")
m = lm(dist~speed, data=cars)
m = lm(dist~speed, data=cars)
summary(m)
par(mfrow=c(2,2), mar=c(1,1,1,1))
plot(m)
par(mfrow=c(2,2), mar=c(2,2,2,2))
plot(m)
par(mfrow=c(2,2), mar=c(3,3,3,3))
plot(m)
par(mfrow=c(1,1), mar=c(3,3,3,3))
plot(m)
install.packages("lmtest")
library(lmtest)
dwtest(m) # 잔차 관련 함수
data(iris)
d = subset(iris, Species=='virginica' | Species=='versicolor')
str(d)
m = glm(Species~., data=d, family='binomial')
summary(m)
m
fitted(m)[c(1:5, 51:55)] # virginica 5개 / versicolor 5개
iris[51]
d$Species
as.numeric(d$Species)
is_correct = ifelse(f>.5, 1, 0) == as.numeric(d$Species)-1
as.numeric(d$Species)-1
f = fitted(m)[c(1:5, 51:55)] #  versicolor 5개 / virginica 5개
f = fitted(m)
is_correct = ifelse(f>.5, 1, 0) == as.numeric(d$Species)-1
ifelse(f>.5, 1, 0)
head(is_correct)
sum(is_correct)
# versicolor=2, virginica=3으로 레이블 된 상태에서,
is_correct = (ifelse(f>.5, 1, 0) == as.numeric(d$Species)-1)
head(is_correct)
sum(is_correct)
# versicolor=2, virginica=3으로 레이블 된 상태에서,
is_correct = (ifelse(f>.5, 1, 0) == (as.numeric(d$Species)-1))
head(is_correct)
sum(is_correct)
as.numeric(d$Species)
# versicolor=2, virginica=3으로 레이블 된 상태에서,
is_correct = (ifelse(f>.5, 1, 0) == (as.numeric(d$Species)-2))
head(is_correct)
sum(is_correct)
fm = ifelse(f>.5, 1, 0)
head(fm)
# 1. 2018년 성북구 청소년(14~19)세 인기도서 대출건수
setwd('C:/Users/student/R_semi_project')
library(dplyr)
for (i in 1:12) {
data_i = read.csv(paste0("'C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",i,".csv"), skip=13)
data_i = data_i %>% select("서명","대출건수")
data_all = full_join(data_all, data_i, by=c("서명","서명"))
}
for (i in 1:12) {
data_i = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",i,".csv"), skip=13)
data_i = data_i %>% select("서명","대출건수")
data_all = full_join(data_all, data_i, by=c("서명","서명"))
}
data_all = data.frame()
for (i in 1:12) {
data_i = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",i,".csv"), skip=13)
data_i = data_i %>% select("서명","대출건수")
data_all = full_join(data_all, data_i, by=c("서명","서명"))
}
data_1 = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",1,".csv"), skip=13)
data_1 = data_1 %>% select("서명","대출건수")
class(data_!)
class(data_1)
data_all = data.frame()
class(data_all)
data_all = data.frame()
data_all = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",1,".csv"), skip=13)
data_all = data_all %>% select("서명","대출건수")
or (i in 2:12) {
data_i = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",i,".csv"), skip=13)
data_i = data_i %>% select("서명","대출건수")
data_all = full_join(data_all, data_i, by=c("서명","서명"))
}
data_2 = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",2,".csv"), skip=13)
data_2 = data_2 %>% select("서명","대출건수")
data_all = full_join(data_all, data_2, by=c("서명","서명"))
View(data_2)
View(data_all)
data_all = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",1,".csv"), skip=13)
data_all = data_all %>% select("서명","대출건수")
for (i in 2:12) {
data_i = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",i,".csv"), skip=13)
data_i = data_i %>% select("서명","대출건수")
data_all = full_join(data_all, data_i, by=c("서명","서명"))
}
View(data_all)
data_all = data_all %>% mutate(count=rowSums(data_all[,2:13], na.rm=T))
data_all = data_all %>% arrange(desc(count)) %>% select("서명","count")
View(data_all)
data_all_sample = head(data_all, 20)
png('semi_practice1.png', width=480, height=480)
barplot(data_all_sample$count, names.arg = data_all_sample$서명, ylim=c(0,40),
col=rainbow(nrow(data_all_sample)))
dev.off()
# 2. 성북구 달빛마루도서관 대출건수 누적 제거
load("C:/Rstudy/R_semi_project/2018년 성북구 도서관별 대출목록.RData")
a = full_join(sb_lib_list$달빛마루도서관[[1]],sb_lib_list$달빛마루도서관[[2]],by=c("도서명","도서명"))
View(a)
b = sb_lib_list$달빛마루도서관[[1]]
View(b)
nrow(b)
a = left_join(sb_lib_list$달빛마루도서관[[1]],sb_lib_list$달빛마루도서관[[2]],by=c("도서명","도서명"))
nrow(a)
a = inner_join(sb_lib_list$달빛마루도서관[[1]],sb_lib_list$달빛마루도서관[[2]],by=c("도서명","도서명"))
nrow(a)
a = inner_join(a,sb_lib_list$달빛마루도서관[[3]],by=c("도서명","도서명"))
nrow(a)
a = inner_join(sb_lib_list$달빛마루도서관[[1]],sb_lib_list$달빛마루도서관[[2]],
by=c("도서명"))
a = inner_join(sb_lib_list$달빛마루도서관[[1]],sb_lib_list$달빛마루도서관[[2]],
by="도서명")
nrow(a)
View(a)
nrow(sb_lib_list$달빛마루도서관[[1]])
nrow(sb_lib_list$달빛마루도서관[[2]])
tail(a)
tail(a)[6]
tail(a)[6,]
tail(a)[6,]$도서명
tail(a)[5,]$도서명
tail(a)[4,]$도서명
tail(a)[3,]$도서명
tail(sb_lib_list$달빛마루도서관[[1]])
tail(sb_lib_list$달빛마루도서관[[2]])
tail(sb_lib_list$달빛마루도서관[[1]])$도서명[6]
tail(sb_lib_list$달빛마루도서관[[2]])$도서명[6]
tail(sb_lib_list$달빛마루도서관[[1]])$도서명[6] == tail(sb_lib_list$달빛마루도서관[[2]])$도서명[6]
tail(sb_lib_list$달빛마루도서관[[1]])$도서명[6] == tail(sb_lib_list$달빛마루도서관[[2]])$도서명[5]
tail(sb_lib_list$달빛마루도서관[[1]])$도서명[5] == tail(sb_lib_list$달빛마루도서관[[2]])$도서명[6]
temp_df1 = sb_lib_list$달빛마루도서관[[1]]
temp_df2 = sb_lib_list$달빛마루도서관[[2]]
head(temp_df1)
head(temp_df2)
length(left_join(temp_df1, temp_df2, by="도서명"))
left_join(temp_df1, temp_df2, by="도서명")
nrow(left_join(temp_df1, temp_df2, by="도서명"))
str(temp_df1)
temp_df1 = as.data.frame(sb_lib_list$달빛마루도서관[[1]])
str(temp_df1)
temp_df2 = as.data.frame(sb_lib_list$달빛마루도서관[[2]])
nrow(left_join(temp_df1, temp_df2, by='도서명'))
subset(temp_df1, 도서명=='1% 리더만 아는 유머의 법칙')
for (i in 1:10) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:20) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:length(data_all)) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:30) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:1000) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:30) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
data_all %>% arrange(desc(서명))
sort(data_all)
sort(data_all$서명)
data_all = sort(data_all$서명)
data_all = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",1,".csv"), skip=13)
data_all = data_all %>% select("서명","대출건수")
for (i in 2:12) {
data_i = read.csv(paste0("C:/Users/student/R_semi_project/2018년_성북구_청소년(14~19)_대출목록/인기대출도서_2018-",i,".csv"), skip=13)
data_i = data_i %>% select("서명","대출건수")
data_all = full_join(data_all, data_i, by=c("서명","서명"))
}
data_all = data_all %>% mutate(count=rowSums(data_all[,2:13], na.rm=T))
data_all = data_all %>% arrange(desc(count)) %>% select("서명","count")
View(data_all)
data_all_sample = head(data_all, 20)
png('semi_practice1.png', width=480, height=480)
barplot(data_all_sample$count, names.arg = data_all_sample$서명, ylim=c(0,30),
col=rainbow(nrow(data_all_sample)))
dev.off()
data_all = data_all %>% arrange(서명)
for (i in 1:30) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:length(data_all)) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
data_all[203]
data_all[203,]
data_all[1,]
data_all$서명[1,]
data_all[1,]$서명
# 2. 성북구 달빛마루도서관 대출건수 누적 제거
load("C:/Rstudy/R_semi_project/2018년 성북구 도서관별 대출목록.RData")
data_all[2,]$서명
data_all[1,]$서명 == data_all[2,]$서명
# 2. 성북구 달빛마루도서관 대출건수 누적 제거
load("C:/Rstudy/R_semi_project/2018년 성북구 도서관별 대출목록.RData")
for (i in 1:length(data_all)) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:length(data_all)) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
nrow(data_all)
for (i in 1:length(data_all)) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
nrow(data_all)
data_all %>% arrange(desc(count))
b = data_all %>% arrange(desc(count))
View(b)
data_all = data_all %>% arrange(desc(count))
data_all = data_all %>% arrange(desc(count))
View(data_all)
for (i in 1:length(data_all)) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
data_all[-5]
data_all = data_all[-5]
View(data_all)
data_all = data_all[-5,]
for (i in 1:length(data_all)) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:30) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:300) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:300) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
data_all = data_all %>% arrange(desc(count))
for (i in 1:300) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:300) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
data_all = data_all %>% arrange(desc(count))
data_all = data_all %>% arrange(desc(서명))
for (i in 1:300) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:300) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
for (i in 1:300) {
if (data_all$서명[i] == data_all$서명[i+1]) {
data_all$count[i] = data_all$count[i] + data_all$count[i+1]
data_all = data_all[-(i+1),]
}
}
data_all = data_all %>% arrange(desc(count))
names(sb_lib_list)
library(readxl)
read_excel("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.xlsx")
lib_address = read_excel("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.xlsx")
View(lib_address)
lib_address = read_excel("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.xlsx", skip=5)
View(lib_address)
lib_address %>% select('주소','위도','경도')
lib_address = read_excel("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.xlsx", skip=5, header=True)
lib_address = read_csv("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.csv", header=True, skip=5)
lib_address = read.csv("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.csv", header=True, skip=5)
lib_address = read.csv("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.csv", header=TRUE, skip=5)
View(lib_address)
lib_address %>% select('주소','위도','경도')
View(lib_address)
names(lib_address)
lib_address = rename('주소'=lib_address$X, '위도'=lib_address$X.3, '경도'=lib_address$X.4)
lib_address = rename(lib_address, '주소'=lib_address$X, '위도'=lib_address$X.3, '경도'=lib_address$X.4)
lib_address = rename(lib_address, 주소=lib_address$X)
library(reshape)
library(reshape2)
lib_address = rename(lib_address, 주소=lib_address$X)
names(lib_address$X, lib_address$X.3, lib_address$X.4) = c('주소','위도','경도')
names(lib_address)
names(lib_address[2])
names(lib_address[2], lib_address[5], lib_address[6]) = c('주소','위도','경도')
names(lib_address[2]) = '주소'
names(c(lib_address[2], lib_address[5], lib_address[6])) = c('주소','위도','경도')
names(lib_address[2]) = '주소'
View(lib_address)
names(lib_address[2]) = '주소'
names(lib_address)
names(lib_address[2]) = '주소'
names(lib_address)
lib_address %>% select('X','X.4','X.5')
View(lib_address)
lib_address = lib_address %>% select('X','X.4','X.5')
View(lib_address)
lib_address = read.csv("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.csv", header=TRUE, skip=5)
lib_address = lib_address %>% select('X','X.3','X.4')
View(lib_address)
class(lib_address)
names(lib_address) = c('주소','위도','경도')
View(lib_address)
lib_address = lib_address[-1]
View(lib_address)
lib_address = read.csv("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.csv", header=TRUE, skip=5)
lib_address = lib_address %>% select('X','X.3','X.4')
names(lib_address) = c('주소','위도','경도')
lib_address = lib_address[-1,]
View(lib_address)
# 2-1 11개 도서관의 주소, 위도, 경도 내용을 담고 있는 df 추출
lib_address = read.csv("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.csv", header=TRUE, skip=5)
View(lib_address)
names(lib_address)
# 2-1 11개 도서관의 주소, 위도, 경도 내용을 담고 있는 df 추출
lib_address = read.csv("C:/Users/student/R_semi_project/도서관정보나루_참여도서관목록.csv", header=TRUE, skip=5)
lib_address = lib_address %>% select('참여도서관_11건','X','X.3','X.4')
names(lib_address) = c('도서관명','주소','위도','경도')
lib_address = lib_address[-1,]
View(lib_address)
# 2-2 연령별, 동별 인구 통계
human_count = read.csv('C:/Users/student/R_semi_project/서울시 주민등록인구_(연령별,동별) 통계.csv', header=TRUE)
View(human_count)
human_count = human_count %>% filter(자치구='성북구')
human_count = human_count %>% filter(자치구=='성북구')
View(human_count)
human_count = human_count %>% filter(자치구=='성북구' && 구분=='계')
View(human_count)
human_count = human_count %>% filter(자치구=='성북구') %>% filter(구분=='계')
View(human_count)
human_count %>% mutate(human_count, '행정동'=c('월곡2동'))
human_count %>% mutate('행정동'=c('월곡2동'))
View(human_count)
lib_address %>% mutate('행정동'=c('월곡2동'))
View(lib_address)
